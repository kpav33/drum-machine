{"version":3,"sources":["components/DrumPad.js","sounds/soundsArr.js","sounds/boom.wav","sounds/clap.wav","sounds/hihat.wav","sounds/kick.wav","sounds/openhat.wav","sounds/ride.wav","sounds/snare.wav","sounds/tink.wav","sounds/tom.wav","components/ButtonsPad.js","components/Title.js","components/Display.js","components/SliderVolume.js","components/Switches.js","App.js","index.js"],"names":["DrumPad","props","audioRef","useRef","play","current","volume","value","currentTime","pause","load","playPromise","undefined","then","catch","err","console","log","handleKeyDown","e","key","toUpperCase","keyValue","innerText","id","document","getElementById","style","background","setTimeout","useEffect","window","addEventListener","removeEventListener","className","onClick","src","ref","soundsArr","ButtonsPad","keys","map","sound","i","Title","size","Display","muiTheme","createMuiTheme","overrides","MuiSlider","thumb","color","track","rail","SliderVolume","Typography","gutterBottom","Grid","container","spacing","item","xs","ThemeProvider","theme","Slider","onChange","event","newValue","setValue","Math","round","aria-labelledby","min","max","step","RedSwitch","withStyles","switchBase","backgroundColor","checked","Switch","Switches","useState","powerCheck","soundsCheck","state","setState","handleChange","target","name","FormControlLabel","control","inputProps","label","labelPlacement","App","setInnerText","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.26f479cb.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\nfunction DrumPad(props) {\n  const audioRef = useRef();\n\n  function handleClick() {\n    props.innerText(props.id);\n    play();\n  }\n\n  function play() {\n    if (audioRef.current) {\n      audioRef.current.volume = props.value;\n      audioRef.current.currentTime = 0;\n      audioRef.current.pause();\n      audioRef.current.load();\n      // Fixes DOM Exception error that happens when you try to run the test suite for the project (https://developers.google.com/web/updates/2016/03/play-returns-promise)\n      const playPromise = audioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise.then(() => {}).catch((err) => console.log(err));\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    // Added toUpperCase() to e.key to pass the project's tests, otherwise it is completely unnecessary\n    if (e.key.toUpperCase() === props.keyValue) {\n      props.innerText(props.id);\n      // Search for a better solution\n      document.getElementById(props.id).style.background = \"#525252\";\n      setTimeout(() => {\n        document.getElementById(props.id).style.background = \"#ca3e47\";\n      }, 300);\n      play();\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  return (\n    <button className=\"drum-pad\" id={props.id} onClick={handleClick}>\n      {props.keyValue}\n      <audio\n        id={props.keyValue}\n        src={props.src}\n        className=\"clip\"\n        ref={audioRef}\n      />\n    </button>\n  );\n}\n\nexport default DrumPad;\n","import boom from \"./boom.wav\";\nimport clap from \"./clap.wav\";\nimport hihat from \"./hihat.wav\";\nimport kick from \"./kick.wav\";\nimport openhat from \"./openhat.wav\";\nimport ride from \"./ride.wav\";\nimport snare from \"./snare.wav\";\nimport tink from \"./tink.wav\";\nimport tom from \"./tom.wav\";\n\nconst soundsArr = [\n  {\n    src: boom,\n    id: \"Boom\",\n  },\n  {\n    src: clap,\n    id: \"Clap\",\n  },\n  {\n    src: hihat,\n    id: \"Hihat\",\n  },\n  {\n    src: kick,\n    id: \"Kick\",\n  },\n  {\n    src: openhat,\n    id: \"Openhat\",\n  },\n  {\n    src: ride,\n    id: \"Ride\",\n  },\n  {\n    src: snare,\n    id: \"Snare\",\n  },\n  {\n    src: tink,\n    id: \"Tink\",\n  },\n  {\n    src: tom,\n    id: \"Tom\",\n  },\n];\n\nexport default soundsArr;\n","export default __webpack_public_path__ + \"static/media/boom.d89f41a5.wav\";","export default __webpack_public_path__ + \"static/media/clap.eb738e52.wav\";","export default __webpack_public_path__ + \"static/media/hihat.0273528c.wav\";","export default __webpack_public_path__ + \"static/media/kick.1d842c55.wav\";","export default __webpack_public_path__ + \"static/media/openhat.482e5231.wav\";","export default __webpack_public_path__ + \"static/media/ride.44e63854.wav\";","export default __webpack_public_path__ + \"static/media/snare.3aa3f943.wav\";","export default __webpack_public_path__ + \"static/media/tink.5b878d5d.wav\";","export default __webpack_public_path__ + \"static/media/tom.52db9c23.wav\";","import React from \"react\";\n\nimport DrumPad from \"./DrumPad\";\nimport soundsArr from \"../sounds/soundsArr\";\n\nfunction ButtonsPad(props) {\n  const keys = [\"Q\", \"W\", \"E\", \"A\", \"S\", \"D\", \"Z\", \"X\", \"C\"];\n\n  return (\n    <div className=\"buttonsPad\">\n      {soundsArr.map((sound, i) => (\n        <DrumPad\n          src={sound.src}\n          key={sound.id}\n          id={sound.id}\n          keyValue={keys[i]}\n          innerText={props.innerText}\n          value={props.value}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default ButtonsPad;\n","import React from \"react\";\n\nimport { FaDrum } from \"react-icons/fa\";\n\nfunction Title() {\n  return (\n    <div className=\"title\">\n      <FaDrum size={32} />\n      <h1>Drum Machine</h1>\n    </div>\n  );\n}\n\nexport default Title;\n","import React from \"react\";\n\nfunction Display(props) {\n  return (\n    <div id=\"display\" className=\"display\">\n      <p>{props.innerText}</p>\n    </div>\n  );\n}\nexport default Display;\n","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport VolumeDown from \"@material-ui/icons/VolumeDown\";\nimport VolumeUp from \"@material-ui/icons/VolumeUp\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst muiTheme = createMuiTheme({\n  overrides: {\n    MuiSlider: {\n      thumb: {\n        color: \"#ca3e47\",\n      },\n      track: {\n        color: \"#ca3e47\",\n      },\n      rail: {\n        color: \"black\",\n      },\n    },\n  },\n});\n\nfunction SliderVolume(props) {\n  const handleChange = (event, newValue) => {\n    props.setValue(newValue);\n    props.innerText(`Volume: ${Math.round(newValue * 100)}`);\n  };\n\n  return (\n    <div className=\"sliderVolume\">\n      <Typography id=\"continuous-slider\" gutterBottom>\n        Volume\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item>\n          <VolumeDown />\n        </Grid>\n        <Grid item xs>\n          <ThemeProvider theme={muiTheme}>\n            <Slider\n              value={props.value}\n              onChange={handleChange}\n              aria-labelledby=\"continuous-slider\"\n              min={0}\n              max={1}\n              step={0.01}\n            />\n          </ThemeProvider>\n        </Grid>\n        <Grid item>\n          <VolumeUp />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default SliderVolume;\n","import React, { useState } from \"react\";\n\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst RedSwitch = withStyles({\n  switchBase: {\n    color: \"#FFFFFF\",\n    \"&$checked\": {\n      color: \"#ca3e47\",\n    },\n    \"&$checked + $track\": {\n      backgroundColor: \"#ca3e47\",\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nfunction Switches() {\n  const [state, setState] = useState({\n    powerCheck: true,\n    soundsCheck: false,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  console.log(state);\n\n  return (\n    <div className=\"bottomBar\">\n      <FormControlLabel\n        control={\n          <RedSwitch\n            checked={state.powerCheck}\n            onChange={handleChange}\n            name=\"powerCheck\"\n            inputProps={{ \"aria-label\": \"power checkbox\" }}\n          />\n        }\n        label=\"Power\"\n      />\n      <FormControlLabel\n        control={\n          <RedSwitch\n            checked={state.soundsCheck}\n            onChange={handleChange}\n            name=\"soundsCheck\"\n            inputProps={{ \"aria-label\": \"sounds checkbox\" }}\n          />\n        }\n        label=\"Guitar?\"\n        labelPlacement=\"start\"\n      />\n    </div>\n  );\n}\n\nexport default Switches;\n","import \"./styles.scss\";\nimport React, { useState } from \"react\";\n\nimport ButtonsPad from \"./components/ButtonsPad\";\nimport Title from \"./components/Title\";\nimport Display from \"./components/Display\";\nimport SliderVolume from \"./components/SliderVolume\";\nimport Switches from \"./components/Switches\";\n\nfunction App() {\n  const [innerText, setInnerText] = useState(\"Fill me up buttercup\");\n  const [value, setValue] = useState(0.3);\n\n  return (\n    <div className=\"app\">\n      <div className=\"panel\" id=\"drum-machine\">\n        <Title />\n        <ButtonsPad innerText={setInnerText} value={value} />\n        <Display innerText={innerText} />\n        <SliderVolume\n          innerText={setInnerText}\n          value={value}\n          setValue={setValue}\n        />\n        <Switches />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}